
default_platform(:ios)

platform :ios do
  
  lane :register_app do 
    produce(
      username: "phongvhd93@gmail.com",
      app_identifier: "com.phong.vhd.bitrise",
      app_name: "Phong Example",
      team_name: "Phong Vo",
      itc_team_name: "Phong Vo"
    )
    
  end 

  # lane :get_dev_certs do
  #   cert(development: true)
  #   sigh(development: true)
  # end
  
  lane :sync_all_development do
    match(type: "development")
  end 

  lane :register_new_device do
    device_name = promt(text: "Enter the device name: ")
    device_udid = promt(text: "Enter the device's udid: ")
    device_hash = {}
    device_hast[device_name] = device_udid
    register_devices(devices: device_hash)
    sync_all_development
  end

  lane :sync_all_devices do 
    register_devices(
      devices_file: "fastlane/DeviceList"
    )
  end 

  lane :sync_signing_assets do |options|
    sync_all_devices
    selectedType = options[:type]
    match(type: selectedType)
  end

  lane :sync_adhoc do
    sync_signing_assets(type: "adhoc")
  end

  lane :sync_app_store do
    sync_signing_assets(type: "appstore")
  end
  

  lane :get_signing_assets do |options|
    selectedType = options[:type]
    match(type: selectedType, readonly: true)
  end 

  lane :build_appstore do
    get_signing_assets(type: "appstore")
    gym(
    output_directory: "build_Appstore",
    export_method: "app-store"
    )
  end
  
  lane :build_adhoc do
    get_signing_assets(type: "adhoc")
    gym(
    output_directory: "build_Adhoc",
    export_method: "ad-hoc"
    )
  end
  
  lane :sandbox do 
    gym(
      scheme: "ExampleApp",
      output_directory: "build_AdHoc",
      build_method: "ad-hoc"
    )
  end 
end
